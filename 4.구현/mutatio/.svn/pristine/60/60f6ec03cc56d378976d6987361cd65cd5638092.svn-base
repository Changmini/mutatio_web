package com.mutatio.sis.thesis.service;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Service;

import com.mutatio.sis.thesis.dao.IThesisDao;
import com.mutatio.sis.thesis.vo.ThesisSearchVO;
import com.mutatio.sis.thesis.vo.ThesisVO;

@Service
public class ThesisServiceImpl {
	
	@Inject
	IThesisDao thesisDao;
	
	/** 
	 * <pre> A Single thesis </pre>
	 * 
	* @methodName : getThesis 
	* @author     : pc24
	* @date       : 2021.12.09 
	* @param thesNo
	* @return ThesisVO
	*/
	public ThesisVO getThesis(int thesNo) {
		ThesisVO thesis = thesisDao.getThesis(thesNo);
		if (thesis == null) return null; // exception 
		return thesis;
	}
	
	
	/** 
	 * <pre> Multiple thesis </pre>
	 * 
	* @methodName : getThesisList 
	* @author     : pc24
	* @date       : 2021.12.09 
	* @param searchVO
	* @return List<ThesisVO>
	*/
	public List<ThesisVO> getThesisList(ThesisSearchVO searchVO) {
		int totalRowCount = thesisDao.getTotalRowCount(); 
		searchVO.setTotalRowCount(totalRowCount);
		searchVO.pageSetting();
		
		List<ThesisVO> thesisList = thesisDao.getThesisList(searchVO);
		if (thesisList == null) return null; // exception 
		return thesisList;
	}
	
	
	
	/**
	 * <pre> Get Auths.. </pre>
	 *  
	* @methodName : getAuths 
	* @author     : pc24
	* @date       : 2021.12.09 
	* @param thesNo
	* @return List<String>
	*/
	public List<String> getAuths(int thesNo) {
		List<String> auths = thesisDao.getAuths(thesNo);
		if (auths == null) return null; // error를 쓰자
		return auths;
	}
	
	
	/**
	 * <pre> Thesis abstract </pre>
	 *  
	* @methodName : getKeyword 
	* @author     : pc24
	* @date       : 2021.12.09 
	* @param thesNo
	* @return List<String>
	*/
	public List<String> getKeyword(int thesNo) {
		List<String> thesis = thesisDao.getKeyword(thesNo);
		if (thesis == null) return null; // exception 
		return thesis;
	}
	
	
	/**
	 * <pre> The thesis quality figures </pre>
	 *  
	* @methodName : quality 
	* @author     : pc24
	* @date       : 2021.12.09 
	* @param thesNo
	* @return List<String>
	*/
	public float quality(int thesNo) {
		List<String> keywordLength = thesisDao.getKeyword(thesNo);
		if (keywordLength.size()==0) return (float) 0.0;
		
		float _if = thesisDao.impReg(thesNo);
		float _fres = thesisDao.freshness(thesNo);
		float _sca = thesisDao.scarcity(thesNo);
		float _pop = thesisDao.popular(thesNo);
		
		float qual = (float) (_if + _fres + 0.2 + _sca + _pop);
		return qual;
	}
	
	
	
	
	
	
}
