<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mutatio.sis.thesis.dao.IThesisDao">
	
	<sql id="search">
		<if test='@org.apache.commons.lang3.StringUtils@isNotBlank(searchWord)'>
			<choose>
				<when test='searchType == "T"'>
					AND lower(thes_title) LIKE '%' || #{searchWord} || '%'
				</when>
				<when test='searchType == "C"'>
					AND lower(thes_summary) LIKE '%' || #{searchWord} || '%'
				</when>
				<when test='searchType == "W"'>
					<if test='authsThesNo.size() != 0'>
						AND thes_no in
						<foreach collection="authsThesNo" item="auth_thes_no"  open="(" close=")" separator=",">
							#{auth_thes_no}
						</foreach>
					</if>
					<if test='authsThesNo.size() == 0'>
						AND thes_no in (0)
					</if>
				</when>
			</choose>
		</if>
		
		<!-- Search Code -->
		<if test='@org.apache.commons.lang3.StringUtils@isNotBlank(searchCCode)'>
			AND thes_category in
			<foreach collection="searchCCode" item="Code"  open="(" close=")" separator=",">
				#{Code}
			</foreach>
		</if>
		
		<!-- Search Date -->
		<if test='@org.apache.commons.lang3.StringUtils@isNotBlank(searchDate)'>
			<foreach collection="searchDate" item="Date" open="AND (" close=")" separator="OR ">
				thes_pu_date BETWEEN #{Date} AND (SUBSTR(#{Date},1,3) || to_char(to_number(SUBSTR(#{Date},4,4)) + 1))
			</foreach>
		</if>
		
		<!-- Search Quality -->
		<if test='searchQuality != null'>	
			AND quality_index BETWEEN #{searchQuality} AND #{searchQuality}+0.5
		</if>
	</sql>
	
	<select id="getTotalRowCount" resultType="int" 
						parameterType="com.mutatio.sis.thesis.vo.ThesisSearchVO" >
		SELECT
			count(*)
        FROM thesis t, thesis_quality q
        WHERE 1=1
        AND t.thes_no = q.thes_no
		<include refid="search"></include>
	</select>
	
	<select id="getThesis" parameterType="int" resultType="com.mutatio.sis.thesis.vo.ThesisVO">
		SELECT
		    thes_no
		  , thes_title
		  , thes_href
		  , thes_imp_factor
		  , thes_pu_date
		  , thes_category
		  , comm_nm as category_nm
		  , thes_cost
		  , thes_page
		  , thes_summary
		FROM
		    thesis, code
		WHERE 1=1
		AND thes_category = comm_cd
		AND thes_no = #{thesNo}
	</select>
	
	
	<select id="getThesisList" parameterType="com.mutatio.sis.thesis.vo.ThesisSearchVO" 
								resultType="com.mutatio.sis.thesis.vo.ThesisVO">
		SELECT
		    *
		FROM (
		    SELECT
		        ROWNUM rnum
		        , A.*
		    FROM (
		            SELECT
		                t.thes_no
		              , thes_title
		              , thes_href
		              , thes_imp_factor
		              , thes_pu_date
		              , thes_category
		              , thes_cost
		              , thes_page
		              , thes_summary
		              , quality_index
		            FROM thesis t, thesis_quality q
		            WHERE 1=1
		            AND t.thes_no = q.thes_no
		            <include refid="search"></include>
		            ORDER BY thes_no
		    ) A
		) B
		WHERE rnum  BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<select id="getAuths" parameterType="int" resultType="String">
		SELECT thes_auth
		FROM author
		WHERE 1=1
		AND thes_no = #{thesNo}
	</select>
	
	<select id="getSearchAuths" parameterType="String" resultType="int">
		SELECT thes_no 
		FROM author
		WHERE 1=1
		AND thes_auth LIKE '%' || #{searchWord} || '%'
	</select>
	
	
	<select id="getKeyword" parameterType="int" resultType="String">
		SELECT
		    thes_keyword
		FROM
		    ai_keyword
		WHERE 1=1
		AND thes_no = #{thesNo}
	</select>
	
	
	<select id="scarcity" parameterType="int" resultType="float">
	SELECT round(log(10,COUNT(DISTINCT(a.thes_no) ) ) ,3) Scarcity
	FROM ai_keyword a, thesis b
	where a.thes_no = b.thes_no
    AND a.thes_keyword in (
	    SELECT thes_keyword
	    FROM ai_keyword
	    WHERE thes_no=2112080002
	)
    AND to_char(
             to_date(
                decode(
                    length(thes_pu_date), 7, CONCAT(thes_pu_date,'.01')
                ,thes_pu_date)
             ,'YY/MM/DD')
         ,'YYYY') in ( select 
                            to_char(
                                to_date(
                                    decode(
                                        length(thes_pu_date), 7, CONCAT(thes_pu_date,'.01')
                                    ,thes_pu_date)
                                ,'YY/MM/DD')
                            ,'YYYY')
                        from thesis
                        WHERE thes_no=2112080002
                     )
	</select>
	
	<select id="popular" parameterType="int" resultType="float">
	SELECT sum(A.word_value) Popular
	FROM (
	    SELECT thes_keyword
	        ,round(count(thes_no) / b.total, 7) word_value
	    FROM ai_keyword a, (SELECT count(thes_keyword) total FROM ai_keyword) b
	    WHERE thes_keyword in (
	        SELECT thes_keyword
	        FROM ai_keyword
	        WHERE thes_no = #{thesNo}
	    )
	    GROUP BY thes_keyword, b.total
	) A
	</select>
	
	<select id="impReg" parameterType="int" resultType="float">
	SELECT round(thes_imp_factor / b.maxv, 4) imp_reg
	FROM thesis a, (SELECT  max(thes_imp_factor) maxv FROM thesis) b
	WHERE thes_no = #{thesNo}
	</select>
	
	<select id="freshness" parameterType="int" resultType="float">
	SELECT 
	    round( 
	      1 / LOG(10, 2+
	            round(
	            	to_number(
	            		sysdate - to_date(decode(length(thes_pu_date), 7, CONCAT(thes_pu_date,'.01'),thes_pu_date),'YY/MM/DD')
	            	) / 365
	            , 1) ),
	    2 ) freshness
	FROM thesis
	WHERE thes_no = #{thesNo}
	</select>
	
	
	<select id="getAddInfo" parameterType="int" resultType="com.mutatio.sis.thesis.vo.ThesisVO">
	SELECT 
	    t.*
	    ,a.sim_prob
	FROM thesis t, (
	    SELECT *
	    FROM add_info
	    WHERE cur_thes = #{thesNo}
	) a
	WHERE 1=1
	AND t.thes_no = a.add_thes
	AND t.thes_no in (
	    SELECT add_thes
	    FROM add_info
	    WHERE cur_thes = #{thesNo}
	)
	</select>
	
	<select id="getHomeThesis" resultType="int">
	select t2.thes_no
		from(
		    select thes_no, count(a.key_word)
		    from (
		        select ROWNUM, t1.key_word
		        from(
		            select key_word, search_total_cnt
		            from date_search_info
		            order by search_total_cnt DESC
		            )t1
		        where ROWNUM between 1 and 3
		    ) a
		    , ai_keyword
		    where ai_keyword.thes_keyword = a.key_word
		    group by thes_no
		    order by count(a.key_word) DESC
		    ) t2
		where ROWNUM = 1
               
	</select>
	
	
	<insert id="getMemReferThesis" parameterType="com.mutatio.sis.member.vo.MemberVO">
		INSERT INTO mem_refer_thesis (
	        mem_id
	      , thes_no
	      , search_date
		) VALUES (
		    #{memId}
		<foreach collection="thesNo" item="no"  open="," separator=",">
			#{no}
		</foreach>
		  , sysdate
		)
	</insert>
	
	
	<insert id="setQualityIndex" parameterType="com.mutatio.sis.thesis.vo.ThesisQualityVO">
		INSERT INTO thesis_quality (
	     	  thes_no
	    	, quality_index
	    	, upload_day 
		) VALUES (
			  #{thesNo}
			, #{qualityIndex}
			, sysdate
		)
	</insert>
	
	<select id="isMoreThanOneVal" resultType="Integer">
		SELECT thes_no
		FROM THESIS
		WHERE thes_no not in (
		    SELECT thes_no
		    FROM THESIS_QUALITY
		)
	</select>
	
	<update id="setUpateQualityIndex" 
					parameterType="com.mutatio.sis.thesis.vo.ThesisQualityVO">
		UPDATE thesis_quality
		SET quality_index = #{qualityIndex}
		WHERE thes_no = #{thesNo}
	</update>
	
	<select id="getAllThesNo" resultType="Integer">
		SELECT thes_no
		FROM THESIS
		ORDER BY thes_no
	</select>
	
	
	<select id="getThesisQualityList" parameterType="com.mutatio.sis.thesis.vo.ThesisSearchVO"
								resultType="com.mutatio.sis.thesis.vo.ThesisVO">
		SELECT t.*, q.quality_index quality_index
		FROM THESIS t, THESIS_QUALITY q
		WHERE t.thes_no = q.thes_no
		AND q.quality_index != 0
		<include refid="search"></include>
	</select>
	
	<select id="getThesisRoundQuality" resultType="float" parameterType="int">
		select round(tq.quality_index, 1)
		from thesis_quality tq, thesis t
		where tq.thes_no = t.thes_no
		and t.thes_no= #{thesNo }
	</select>
	
	
</mapper>










