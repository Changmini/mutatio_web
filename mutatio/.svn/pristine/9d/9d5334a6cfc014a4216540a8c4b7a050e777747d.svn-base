package com.mutatio.sis.member.service;

import java.util.List;

import javax.inject.Inject;
import javax.swing.text.Position.Bias;

import org.springframework.stereotype.Service;

import com.mutatio.sis.exception.BizNotEffectedException;
import com.mutatio.sis.exception.BizNotFoundException;
import com.mutatio.sis.member.dao.IMemberDao;
import com.mutatio.sis.member.vo.MemberSearchVO;
import com.mutatio.sis.member.vo.MemberVO;

@Service
public class MemberService {
	
	@Inject
	IMemberDao memberDao;
	
	
	public List<MemberVO> getMemList(
			MemberSearchVO searchVO){ // 1
		
		searchVO.setTotalRowCount(1000);
		searchVO.pageSetting();
		
		List<MemberVO> memberList = memberDao.getMemberList( // 3
				searchVO); // 2
		return memberList; // 4
	}
	
	// 회원정보 뷰 , 편집	
	public MemberVO getMember(String memId) {
		MemberVO member = memberDao.getMember(memId);
		return member;
	}
	
	// 회원정보 수정 완료
	public void modifyMember(MemberVO member) throws BizNotEffectedException{
		// interceptor를 사용할 것이니 회원이 존재하는지를 확인할 필요는 없지 않을까?
		int cnt = memberDao.updateMember(member);
		if(cnt <= 0) throw new BizNotEffectedException();
	}
	
	public void deleteMember(String memId) 
			throws BizNotEffectedException, BizNotFoundException{
		MemberVO vo = memberDao.getMember(memId);
		if(vo == null) throw new BizNotFoundException();
		int cnt = memberDao.deleteMember(memId);
		if(cnt <= 0) throw new BizNotEffectedException();
	}
		
	
	// 회원가입
	public void joinMember(MemberVO member) 
			throws BizNotEffectedException {		
		MemberVO vo = memberDao.getMember(member.getMemId());
		if(vo == null) {
			int cnt = memberDao.joinMember(member);
		}else {
			throw new BizNotEffectedException();
		}
		
	}
}

