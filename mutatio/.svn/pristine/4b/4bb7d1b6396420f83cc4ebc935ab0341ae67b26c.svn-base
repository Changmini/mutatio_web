package com.mutatio.sis.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.mutatio.sis.common.vo.ResultMessageVO;
import com.mutatio.sis.member.service.MemberServiceImpl;
import com.mutatio.sis.member.vo.MemberSearchVO;
import com.mutatio.sis.member.vo.MemberVO;
import com.mutatio.sis.exception.BizNotEffectedException;
import com.mutatio.sis.exception.BizNotFoundException;

@Controller
public class MemberController {
	
	@Inject
	@Qualifier("memberServiceImpl")
	MemberServiceImpl memberService;
	
	@RequestMapping("/member/memberList.do")
	public String memberList(Model model, MemberSearchVO searchVO) {
		
		List<MemberVO> memberList  = memberService.getMemList(searchVO);
		model.addAttribute("memberList", memberList);
		return "/member/member";
	}
	
	@RequestMapping("/member/memberView.do")
	public String memberView(Model model, @RequestParam(value="memId", required = true) String memId) {
		MemberVO member = memberService.getMember(memId);
		model.addAttribute("member", member);
		return "/member/memberView";
	}
	
	@RequestMapping("/member/memberEdit.do")
	public String memberEdit(Model model, @RequestParam(value="memId") String memId) {	
		MemberVO member = memberService.getMember(memId);
		model.addAttribute("member", member);
		return "/member/memberEdit";
	}
	
//	@RequestMapping("/member/memberModify.do")
	@PostMapping(value="/member/memberModify.do")
	public String memberModify(Model model, MemberVO member) {
		ResultMessageVO resultMessageVO = new ResultMessageVO();
		try {
			memberService.modifyMember(member);
			resultMessageVO.setResult(true);
			resultMessageVO.setTitle("member수정 성공");
			resultMessageVO.setMessage("member수정에 성공하였습니다");
			resultMessageVO.setUrl("/member/memberList.do");
			resultMessageVO.setUrlTitle("목록으로");
		} catch (BizNotEffectedException ebe) {
			resultMessageVO.setResult(false);
			resultMessageVO.setTitle("member수정 실패");
			resultMessageVO.setMessage("member수정에 실패했습니다. BizNotEffected");
			resultMessageVO.setUrl("/member/memberList.do");
		} catch (BizNotFoundException ebf) {
			resultMessageVO.setResult(false);
			resultMessageVO.setTitle("member수정 실패");
			resultMessageVO.setMessage("member수정에 실패했습니다. member를 찾을 수 없습니다.");
			resultMessageVO.setUrl("/member/memberList.do");
			resultMessageVO.setUrlTitle("목록으로");
		}
		model.addAttribute("resultMessageVO", resultMessageVO);
		return "common/message";
	}
	
	@RequestMapping("/member/memberDelete.do")
	public String memberDelete(Model model, String memId) {
		ResultMessageVO resultMessageVO = new ResultMessageVO();
		try {
			memberService.deleteMember(memId);
			resultMessageVO.setResult(true);
			resultMessageVO.setTitle("member 삭제 성공");
			resultMessageVO.setMessage("member삭제에 성공하였습니다");
			resultMessageVO.setUrl("/member/memberList.do");
			resultMessageVO.setUrlTitle("목록으로");
		} catch (BizNotEffectedException ebe) {
			resultMessageVO.setResult(false);
			resultMessageVO.setTitle("member삭제 실패");
			resultMessageVO.setMessage("member삭제에 실패했습니다. BizNotEffected");
			resultMessageVO.setUrl("/member/memberList.do");
			System.out.println("BizNotEffectedException");
		} catch (BizNotFoundException ebf) {
			System.out.println("BizNotFoundException1111");
			resultMessageVO.setResult(false);
			resultMessageVO.setTitle("member삭제 실패");
			resultMessageVO.setMessage("member삭제에 실패했습니다. member를 찾을 수 없습니다.");
			resultMessageVO.setUrl("/member/memberList.do");
			resultMessageVO.setUrlTitle("목록으로");
		}
		model.addAttribute("resultMessageVO", resultMessageVO);
		return "common/message";
	}
	
	@RequestMapping(value="/member/memberForm.do")
	public String memberForm(Model model) {
		return "member/memberForm";
	}
	
	@RequestMapping("/member/memberRegist.do")
	public String memberRegist(Model model, MemberVO member) {
		ResultMessageVO resultMessageVO = new ResultMessageVO();
		try {
			memberService.insertMember(member);
			resultMessageVO.setResult(true);
			resultMessageVO.setTitle("member등록 성공");
			resultMessageVO.setMessage("member등록에 성공하였습니다");
			resultMessageVO.setUrl("/member/memberList.do");
			resultMessageVO.setUrlTitle("목록으로");
		} catch (BizNotEffectedException ebe) {
			resultMessageVO.setResult(false);
			resultMessageVO.setTitle("member등록 실패");
			resultMessageVO.setMessage("member등록에 실패했습니다.");
			resultMessageVO.setUrl("/member/memberList.do");
			resultMessageVO.setUrlTitle("목록으로");
		} 
		model.addAttribute("resultMessageVO", resultMessageVO);
		return "common/message";
	}

}
