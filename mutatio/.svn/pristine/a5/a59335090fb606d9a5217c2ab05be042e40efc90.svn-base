package com.mutatio.sis.question.service;

import java.util.List;

import javax.inject.Inject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import com.mutatio.sis.exception.BizNotEffectedException;
import com.mutatio.sis.exception.BizNotFoundException;
import com.mutatio.sis.exception.BizUserNotMatchedException;
import com.mutatio.sis.member.vo.MemberVO;
import com.mutatio.sis.question.dao.IQuestionDao;
import com.mutatio.sis.question.vo.QuesVO;
import com.mutatio.sis.question.vo.QuestionSearchVO;
import com.mutatio.sis.security.CustomUser;

@Service
public class QuestionService {
	
	@Inject
	IQuestionDao iQuestionDao;
	
	private Logger logger = LoggerFactory.getLogger(this.getClass());
	
	public List<QuesVO> getQuesBoardList(QuestionSearchVO searchVO) {
		int totalRowCount = iQuestionDao.getTotalRowCount();
		searchVO.setTotalRowCount(totalRowCount);
		searchVO.pageSetting();
		logger.info("rowCnt of quesBoardList:: {}",searchVO);
		List<QuesVO> quesList = iQuestionDao.getQuesBoardList(searchVO);
		return quesList;
	}

	public QuesVO getQuesBoard(int quesNo) throws BizNotFoundException {
		iQuestionDao.increaseHit(quesNo);
		QuesVO quesBoard = iQuestionDao.getQuesBoard(quesNo);
		if (quesBoard == null) throw new BizNotFoundException(); 
		return quesBoard;
	}
	
	public void checkRole(CustomUser user, QuesVO quesBoard) throws BizUserNotMatchedException {
		if( user == null // first- inspect null
				|| !(user.getUsername().equals(quesBoard.getQuesWriter()))
				/* 관리자 추가 권한*/ ) throw new BizUserNotMatchedException();
	} 

	public void questModify(QuesVO quesVO) throws BizNotFoundException, BizNotEffectedException {
		QuesVO quesBoard = iQuestionDao.getQuesBoard(quesVO.getQuesNo());// Existence of the thesis
		if (quesBoard == null) throw new BizNotFoundException();         // not exist thesis

		int cnt = iQuestionDao.questModify(quesVO);
		if (cnt < 1) throw new BizNotEffectedException();       // fail update
	}

	public void questDelete(QuesVO quesVO) throws BizNotEffectedException, BizNotFoundException {
		QuesVO quesBoard = iQuestionDao.getQuesBoard(quesVO.getQuesNo());
		if (quesBoard == null) throw new BizNotFoundException();
		System.out.println(quesVO.getQuesNo());
		int cnt =  iQuestionDao.questDelete(quesVO);
		if (cnt < 1) throw new BizNotEffectedException(); 
	}

	public void insertQuesBoard(QuesVO quesVO) throws BizNotEffectedException {
		int cnt = iQuestionDao.insertQuesBoard(quesVO);
		if (cnt < 1) throw new BizNotEffectedException();
		
	}
	
	
	
	
	
} // class




















