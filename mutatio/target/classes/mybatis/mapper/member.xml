<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mutatio.sis.member.dao.IMemberDao">

<!--  search -->
	<sql id="search">
		<if test='@org.apache.commons.lang3.StringUtils@isNotBlank(memDelYn)'>
					AND member.mem_del_yn = #{memDelYn}
		</if>
		<if test='@org.apache.commons.lang3.StringUtils@isNotBlank(searchWord)'>
			<choose>
				<when test='searchType == "I"'>
					AND mem_id LIKE '%' || #{searchWord} || '%'
				</when>
				<when test='searchType == "N"'>
					AND mem_name LIKE '%' || #{searchWord} || '%'
				</when>
			</choose>
		</if>
		
		<if test='@org.apache.commons.lang3.StringUtils@isNotBlank(searchJobCate)'>
			AND comm_cd = #{searchJobCate}
		</if>
	</sql>




	<select id="getTotalRowCount" resultType="int" parameterType="com.mutatio.sis.member.vo.MemberSearchVO">
		SELECT count(*) as mem_cnt
		FROM member
		WHERE 1=1
		<include refid="search"></include>
	</select>

	<select id="getMemberList" resultType="com.mutatio.sis.member.vo.MemberVO" 
		parameterType="com.mutatio.sis.member.vo.MemberSearchVO">
		SELECT b.*
		FROM(
		    SELECT ROWNUM rnum
		        ,a.*
		    FROM (
		        select 
		             mem_id
		            ,mem_name
		            ,mem_pass
		            ,TO_CHAR(mem_bir, 'YYYY-MM-DD') AS mem_bir
		            ,mem_mail
		            ,TO_CHAR(mem_reg_date, 'YYYY-MM-DD') AS mem_reg_date
		            ,member.mem_job
		            ,code.comm_Nm mem_job_nm
		        from member, code
		        WHERE 1=1
               AND member.mem_job = code.comm_cd
               <include refid="search"></include>
		        ORDER BY 1
		    ) a
		) b
		WHERE rnum between #{startRowNum} and #{endRowNum}
	</select>
	
	
	<select id="getMember" resultType="com.mutatio.sis.member.vo.MemberVO" 
			parameterType="String">
		SELECT
			 mem_id
			,mem_pass
			,mem_name
			,mem_mail
			,TO_CHAR(mem_bir, 'YYYY-MM-DD') AS mem_bir		
			,TO_CHAR(mem_reg_date, 'YYYY-MM-DD') AS mem_reg_date	
			,member.mem_job
			,code.comm_nm AS mem_job_nm
			,mem_del_yn
      	FROM member, code
       WHERE 1=1
       AND member.mem_job = code.comm_cd
		AND mem_id = #{memId}
	</select>
	
	<select id="getMemberYn" resultType="com.mutatio.sis.member.vo.MemberVO" 
			parameterType="String">
		SELECT
			 mem_id
			,mem_pass
			,mem_name
			,mem_mail
			,TO_CHAR(mem_bir, 'YYYY-MM-DD') AS mem_bir		
			,TO_CHAR(mem_reg_date, 'YYYY-MM-DD') AS mem_reg_date	
			,member.mem_job
			,code.comm_nm AS mem_job_nm
      	FROM member, code
       WHERE 1=1
       AND mem_del_yn = 'N'
       AND member.mem_job = code.comm_cd
		AND mem_id = #{memId}
	</select>
	
	
	
	
	
	<update id="updateMember" parameterType="com.mutatio.sis.member.vo.MemberVO">
		<if test="memPass == null">
			UPDATE member SET
		       mem_name=#{memName}
		      ,mem_mail=#{memMail}
		      ,mem_bir=#{memBir}
		      ,mem_job=#{memJob}
			WHERE mem_id=#{memId}
		</if>
		<if test="memPass != null">
			UPDATE member SET
		       mem_pass=#{memPass}
			WHERE mem_id=#{memId}
		</if>
	</update>
	
	
	<select id="getCcId" parameterType="com.mutatio.sis.member.vo.MemberVO"
								resultType="Integer">
		select cc_id
		from concern_code
		where mem_id = #{memId}
	</select>
	
	
	<update id="updateConCode" parameterType="map">
		UPDATE concern_code
		SET con_code = #{conCode} 
		WHERE cc_id = #{ccId}
	</update>
	
	
	<update id="deleteMember" parameterType="com.mutatio.sis.member.vo.MemberVO">
		UPDATE member SET
			mem_del_yn = 'Y'
		WHERE mem_id=#{memId}
	</update>
	
	<update id="restartMember" parameterType="String">
		UPDATE member SET
			mem_del_yn = 'N'
		WHERE mem_id=#{memId}
	</update>	
	

	
	<insert id="joinMember" parameterType="com.mutatio.sis.member.vo.MemberVO">
		INSERT INTO member (
			   mem_id
		    , mem_pass
		    , mem_name
		    , mem_mail
		    , mem_bir
		    , mem_del_yn
		    , mem_mileage
		    , mem_job
		    , mem_reg_date
		) VALUES (
		      #{memId}
		    , #{memPass}
		    , #{memName}
		    , #{memMail}
		    , #{memBir}
		    , 'N'		  
		     , 0
		     ,#{memJob}
		    , SYSDATE
		)
	</insert>

	
	<insert id="joinConCode" parameterType="hashmap">
		INSERT INTO concern_code (
	    	  mem_id
		    ,con_code
		    , cc_id
		) VALUES (
		     #{memId}
		    ,#{conCode}
		     ,SEQ_CC.nextval
		)
	</insert>
	
	<select id="getConcernField" parameterType="String" resultType="map">
		SELECT con_code
		      ,comm_Nm
		FROM concern_code, code
		WHERE con_code = code.comm_cd
		AND mem_id = #{memId}
	</select>
	
	<!-- 로그인 -->
	<select id= "getUserRoleListByUserId" parameterType= "String" resultType= "String">
		SELECT role_nm
		FROM user_role
		WHERE user_id = #{memId}
	</select>
	
	<insert id="insertUserRole" parameterType="String">
		INSERT INTO user_role (
		    user_id
		    , role_nm
		) VALUES (
		    #{memId}
		  , 'ROLE_MEMBER'
		)
	</insert>
	
	
	
</mapper>